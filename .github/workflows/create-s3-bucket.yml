name: 
run-name: ${{ github.actor }} creating S3 bucket
on:
  push:
    branches:
      - 111
jobs:
  S3:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: Development
      

    steps:
      - name: Checkout code
        uses: actions/checkout@main
      - run: |
          aws s3 mb s3://final-project-bucket

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_PRIVATE_KEY: ${{ secrets.FINAL_WORK_KEY }}
          AWS_DEFAULT_REGION: 'us-west-2'

    # - name: Set up AWS CLI
    #   uses: aws-actions/configure-aws-credentials@v1
    #   env:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-private-key: ${{ secrets.AWS_PRIVATE_KEY  }}
    #     aws-region: us-west-2
      
    # - name: Create S3 Bucket using AWS CLI on EC2
    #   run:
    #     echo "$PRIVATE_KEY" > temp_private_key && chmod 600 temp_private_key
    #     # can make this dinamic, but for science purpuse we made it simple like this:
    #     ssh -i temp_private_key -o StrictHostKeyChecking=no ubuntu@54.201.114.163  << EOF
    #     aws s3 create-bucket --bucket Final-project-S3-bucket --region us-west-2a
    #     EOF

    # - name: Deploy in EC2 (Install Docker)
    #     env:
    #       aws-private-key: ${{ secrets.AWS_PRIVATE_KEY  }}
                 
    #     run: |
    #        echo "$AWS-PRIVATE-KEY" > private_key && chmod 600 private_key
    #        ssh -o StrictHostKeyChecking=no -i private_key ubuntu@54.201.114.163 "
    #         sudo apt-get update&
    #        sudo apt-get install ca-certificates curl gnupg&
    #        sudo install -m 0755 -d /etc/apt/keyrings&
    #         curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&
    #         sudo chmod a+r /etc/apt/keyrings/docker.gpg&
    #        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &
    #         sudo apt-get update&
    #         sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"
