name: 
#To know who to blame for all the problems -->
run-name: ${{ github.actor }} creating S3 bucket
on:
  push:
    #TODO: For testing leave on push and later switch to merge into main
    branches:
      - 111
jobs:
  S3:
    name: Deploy
    runs-on: ubuntu-latest
    environment:
      name: Development
      

    steps:
      - name: Checkout code

        uses: actions/checkout@main
        #TODO: Make name creation more "dinamic" (without spamming 100k new buckets)
        #aws s3 mb s3://final-test-project  -for bucket creating
        #aws s3 ls s3://final-test-project  -for listing bucket contents
      - run: |
          aws s3 ls s3://final-test-project 

        env: #env setup
          #Access key stored as GitHub repo secret
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #Secret access key stored as GitHub repo secret
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #Desired region for deployment
          AWS_DEFAULT_REGION: 'us-west-2'

      - name: Docker deploy in EC2
        env:
          AWS_PRIVATE_KEY: ${{ secrets.FINAL_WORK_KEY }}
        #docker Linux install by using apt-get: https://docs.docker.com/engine/install/ubuntu/
        run: | # can make this dinamic, but for science purpuses we made it simple like this:
          echo "$AWS_PRIVATE_KEY" > aws_private_key && chmod 600 aws_private_key
          ssh -o StrictHostKeyChecking=no -i aws_private_key ubuntu@54.201.114.163 "
          sudo apt-get update&
          sudo apt-get install ca-certificates curl gnupg&
          sudo install -m 0755 -d /etc/apt/keyrings&
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg&
          sudo chmod a+r /etc/apt/keyrings/docker.gpg&
          echo \ 
            "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &
          sudo apt-get update&
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin"
